library(AA.IDT)
install.packages("devtools")
library(AA.IDT)
library(AA.IDT)
get.accuracy()
library(AA.IDT)
library("AA.IDT")
# Cargo los datasets
setwd(
'C:/Users/rodri/Google Drive/UBA/Exploración de Datos/Aprendizaje Automático/AA-TP1-Fernandez_Piotti_Rodriguez/Datasets/TelcoChurn'
)
TelcoChurn.Trainning <- read.csv('TelcoChurn-Trainning.csv')
TelcoChurn.Validation <- read.csv('TelcoChurn-Validation.csv')
# ---------------------------------------------------- Según Confidence Factor
# genereta se sequence of confidence factor
ConfidenceFactor.Vector = seq(0.05, 0.5, by = 0.05)
# ejecuto las corridas en base al CF
results.cf = execute.J48(ConfidenceFactor.Vector,
0,
TelcoChurn.Trainning,
TelcoChurn.Validation)
install.packages(""AA.IDT"")
install.packages("AA.IDT")
install.packages("AA.IDT")
library("AA.IDT")
# Cargo los datasets
setwd(
'C:/Users/rodri/Google Drive/UBA/Exploración de Datos/Aprendizaje Automático/AA-TP1-Fernandez_Piotti_Rodriguez/Datasets/TelcoChurn'
)
# ejecuto las corridas en base al CF
results.cf = execute.J48(ConfidenceFactor.Vector,
0,
TelcoChurn.Trainning,
TelcoChurn.Validation)
library(AA.IDT)
library(AA.IDT)
# ejecuto las corridas en base al CF
results.cf = execute.J48(ConfidenceFactor.Vector,
0,
TelcoChurn.Trainning,
TelcoChurn.Validation)
library(RWeka)
# ejecuto las corridas en base al CF
results.cf = execute.J48(ConfidenceFactor.Vector,
0,
TelcoChurn.Trainning,
TelcoChurn.Validation)
library(partykit)
library(partykit)
# ejecuto las corridas en base al CF
results.cf = execute.J48(ConfidenceFactor.Vector,
0,
TelcoChurn.Trainning,
TelcoChurn.Validation)
plot.treeSize(results.cf, "Confidence Factor", ConfidenceFactor.Vector)
library(ggplot2)
plot.treeSize(results.cf, "Confidence Factor", ConfidenceFactor.Vector)
library(AA.IDT)
devtools::check()
library(devtools)
devtools::check()
devtools::check()
devtools::check(document = FALSE)
install.packages("roxygen2")
library(AA.IDT)
library("roxygen2", lib.loc="~/R/win-library/3.5")
detach("package:roxygen2", unload=TRUE)
ggplot()
ggplot()
library(AA.IDT)
library(AA.IDT)
# Cargo los datasets
setwd(
'C:/Users/rodri/Google Drive/UBA/Exploración de Datos/Aprendizaje Automático/AA-TP1-Fernandez_Piotti_Rodriguez/Datasets/TelcoChurn'
)
TelcoChurn.Trainning <- read.csv('TelcoChurn-Trainning.csv')
TelcoChurn.Validation <- read.csv('TelcoChurn-Validation.csv')
# ---------------------------------------------------- Según Confidence Factor
# genereta se sequence of confidence factor
ConfidenceFactor.Vector = seq(0.05, 0.5, by = 0.05)
# ejecuto las corridas en base al CF
results.cf = execute.J48(ConfidenceFactor.Vector,
0,
TelcoChurn.Trainning,
TelcoChurn.Validation)
plot.treeSize(results.cf, "Confidence Factor", ConfidenceFactor.Vector)
plot.performance(results.cf, "Confidence Factor", ConfidenceFactor.Vector)
# ---------------------------------------------------- Según MinNumObj
MinNumObj.Vector = seq(0.005, 0.1, by = 0.005)
# ejecuto las corridas en base al CF
results.mno = execute.J48(MinNumObj.Vector,
0.3,
TelcoChurn.Trainning,
TelcoChurn.Validation)
plot.treeSize(results.mno, "MinNumObj (%)", MinNumObj.Vector)
plot.performance(results.mno, "MinNumObj (%)", MinNumObj.Vector)
plot.treeSize(results.mno, "MinNumObj (%)", MinNumObj.Vector)
